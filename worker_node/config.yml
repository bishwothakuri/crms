system:
  main_interface: 'en0' # simulation = worker<XXX>-eth0 => ignore this value; production = enp0s8 or wlp4s0/wlp2s0
  # type of collectord / simulation = containernet ; production = hardware device
  type: production

collectord:
  metric_collector:
    version: "3.8"
    networks:
      monitor_net:
    volumes:
      prom_data:
    config_path: "config/prometheus/prometheus.yaml"
    containers:
      prometheus:
        container_name: prometheus
        image: unibaktr/prometheus:2.17.1
        ports:
        - "9090:9090"
        volumes:
        - config/prometheus:/etc/prometheus:ro
        - prom_data:/prometheus:rw
        command:
        - "--config.file=/etc/prometheus/prometheus.yaml"
        - "--storage.tsdb.path=/prometheus"
        - "--storage.tsdb.retention=2h"
        networks:
        - monitor_net:
    metric_port: 9090
  local_exporters:
    simulation:
      version: "3.8"
      networks:
        monitor_net:
      containers:
        nodeexporter:
          container_name: nodeexporter
          image: unibaktr/nodeexporter:0.18.1
          network_mode: "host"
          pid: "host"
          volumes:
          - /proc:/host/proc:ro
          - /sys:/host/sys:ro
          - /:/rootfs:ro
          - /etc/hostname:/etc/nodename:ro
          command:
          - "--path.rootfs=/rootfs"
          - "--path.sysfs=/host/sys"
          - "--path.procfs=/host/proc"
          - "--collector.textfile.directory=/etc/node_exporter"
          - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc|rootfs/var-lib-docker/containers|rootfs/var-lib-docker/overlay2|rootfs/run/docker/netns|rootfs/var-lib-docker/aufs)($$|/)"
          - "--no-collector.arp"
          - "--no-collector.bcache"
          - "--no-collector.edac"
          - "--no-collector.entropy"
          - "--no-collector.filefd"
          - "--no-collector.infiniband"
          - "--no-collector.ipvs"
          - "--no-collector.nfs"
          - "--no-collector.sockstat"
          - "--no-collector.timex"
          - "--no-collector.uname"
          - "--no-collector.vmstat"
          - "--no-collector.xfs"
          - "--no-collector.zfs"
          entrypoint: "/etc/node_exporter/docker-entrypoint.sh"
          restart: "always" # no, always, on-failure[:max-retries]
          metric_port: 9100
        cadvisor:
          container_name: cadvisor
          image: unibaktr/cadvisor:v0.36.0
          ports:
          - "8080:8080"
          volumes:
          - /:/rootfs:ro
          - /var/run:/var/run:rw
          - /sys:/sys:ro
          - /var-lib-docker/:/var/lib/docker:ro
          - /dev/disk/:/dev/disk:ro
          command:
          - "-logtostderr"
          - "-allow_dynamic_housekeeping=false"
          - "-global_housekeeping_interval=10s"
          - "-housekeeping_interval=10s"
          - "-docker_only=true"
          - "-storage_duration=30s"
          entrypoint: "/usr/bin/cadvisor"
          privileged: True
          restart: "always" # no, always, on-failure[:max-retries]
          networks:
          - monitor_net:
          metric_port: 8080
    production:
      version: "3.8"
      networks:
        monitor_net:
      containers:
        nodeexporter:
          container_name: nodeexporter
          image: unibaktr/nodeexporter:0.18.1
          network_mode: "host"
          pid: "host"
          volumes:
          - /proc:/host/proc:ro
          - /sys:/host/sys:ro
          - /:/rootfs:ro
          - /etc/hostname:/etc/nodename:ro
          command:
          - "--path.rootfs=/rootfs"
          - "--path.sysfs=/host/sys"
          - "--path.procfs=/host/proc"
          - "--collector.textfile.directory=/etc/node_exporter"
          - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
          - "--no-collector.arp"
          - "--no-collector.bcache"
          - "--no-collector.edac"
          - "--no-collector.entropy"
          - "--no-collector.filefd"
          - "--no-collector.infiniband"
          - "--no-collector.ipvs"
          - "--no-collector.nfs"
          - "--no-collector.sockstat"
          - "--no-collector.timex"
          - "--no-collector.uname"
          - "--no-collector.vmstat"
          - "--no-collector.xfs"
          - "--no-collector.zfs"
          entrypoint: "/etc/node_exporter/docker-entrypoint.sh"
          restart: "always" # no, always, on-failure[:max-retries]
          metric_port: 9100
        cadvisor:
          container_name: cadvisor
          image: unibaktr/cadvisor:v0.36.0
          ports:
          - "8080:8080"
          volumes:
          - /:/rootfs:ro
          - /var/run:/var/run:rw
          - /sys:/sys:ro
          - /var/lib/docker/:/var/lib/docker:ro
          - /dev/disk/:/dev/disk:ro
          command:
          - "-logtostderr"
          - "-allow_dynamic_housekeeping=false"
          - "-global_housekeeping_interval=10s"
          - "-housekeeping_interval=10s"
          - "-docker_only=true"
          - "-storage_duration=30s"
          entrypoint: "/usr/bin/cadvisor"
          privileged: True
          restart: "always" # no, always, on-failure[:max-retries]
          networks:
          - monitor_net:
          metric_port: 8080

coordinatord:
  listen_port: 10100 # port for listening socket
  send_port: 10110 # port for sending socket
  broadcast_port: 10120 # port in coordinatord used for broadcasting UDP packets to monitor/worker hosts
  worker_dest_port: 10300 # listening port of workerd running in worker host
  monitor_dest_port: 10400 # listening port of monitord running in monitor host
  broadcast_interval: 10 # in seconds

architectd:
  number_of_architect: 2
  initialize_worker_api: "/terraform"
  metric_exporters:
    simulation:
      version: "3.8"
      networks:
        monitor_net:
      containers:
        nodeexporter:
          container_name: nodeexporter
          image: unibaktr/nodeexporter:0.18.1
          network_mode: "host"
          pid: "host"
          volumes:
          - /proc:/host/proc:ro
          - /sys:/host/sys:ro
          - /:/rootfs:ro,rslave
          - /etc/hostname:/etc/nodename:ro
          command:
          - "--path.rootfs=/rootfs"
          - "--path.sysfs=/host/sys"
          - "--path.procfs=/host/proc"
          - "--collector.textfile.directory=/etc/node_exporter"
          - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc|rootfs/var-lib-docker/containers|rootfs/var-lib-docker/overlay2|rootfs/run/docker/netns|rootfs/var-lib-docker/aufs)($$|/)"
          - "--no-collector.arp"
          - "--no-collector.bcache"
          - "--no-collector.edac"
          - "--no-collector.entropy"
          - "--no-collector.filefd"
          - "--no-collector.infiniband"
          - "--no-collector.ipvs"
          - "--no-collector.nfs"
          - "--no-collector.sockstat"
          - "--no-collector.timex"
          - "--no-collector.uname"
          - "--no-collector.vmstat"
          - "--no-collector.xfs"
          - "--no-collector.zfs"
          entrypoint: "/etc/node_exporter/docker-entrypoint.sh"
          restart: "always" # no, always, on-failure[:max-retries]
          metric_port: 9100
        cadvisor:
          container_name: cadvisor
          image: unibaktr/cadvisor:v0.36.0
          ports:
          - "8080:8080"
          volumes:
          - /:/rootfs:ro
          - /var/run:/var/run:rw
          - /sys:/sys:ro
          - /var-lib-docker/:/var/lib/docker:ro
          - /dev/disk/:/dev/disk:ro
          command:
          - "-logtostderr"
          - "-allow_dynamic_housekeeping=false"
          - "-global_housekeeping_interval=10s"
          - "-housekeeping_interval=10s"
          - "-docker_only=true"
          - "-storage_duration=30s"
          entrypoint: "/usr/bin/cadvisor"
          privileged: True
          restart: "always" # no, always, on-failure[:max-retries]
          networks:
          - monitor_net:
          metric_port: 8080
    production:
      version: "3.8"
      networks:
        monitor_net:
      containers:
        nodeexporter:
          container_name: nodeexporter
          image: unibaktr/nodeexporter:0.18.1
          network_mode: "host"
          pid: "host"
          volumes:
          - /proc:/host/proc:ro
          - /sys:/host/sys:ro
          - /:/rootfs:ro
          - /etc/hostname:/etc/nodename:ro
          command:
          - "--path.rootfs=/rootfs"
          - "--path.sysfs=/host/sys"
          - "--path.procfs=/host/proc"
          - "--collector.textfile.directory=/etc/node_exporter"
          - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
          - "--no-collector.arp"
          - "--no-collector.bcache"
          - "--no-collector.edac"
          - "--no-collector.entropy"
          - "--no-collector.filefd"
          - "--no-collector.infiniband"
          - "--no-collector.ipvs"
          - "--no-collector.nfs"
          - "--no-collector.sockstat"
          - "--no-collector.timex"
          - "--no-collector.uname"
          - "--no-collector.vmstat"
          - "--no-collector.xfs"
          - "--no-collector.zfs"
          entrypoint: "/etc/node_exporter/docker-entrypoint.sh"
          restart: "always" # no, always, on-failure[:max-retries]
          metric_port: 9100
        cadvisor:
          container_name: cadvisor
          image: unibaktr/cadvisor:v0.36.0
          ports:
          - "8080:8080"
          volumes:
          - /:/rootfs:ro
          - /var/run:/var/run:rw
          - /sys:/sys:ro
          - /var/lib/docker/:/var/lib/docker:ro
          - /dev/disk/:/dev/disk:ro
          command:
          - "-logtostderr"
          - "-allow_dynamic_housekeeping=false"
          - "-global_housekeeping_interval=10s"
          - "-housekeeping_interval=10s"
          - "-docker_only=true"
          - "-storage_duration=30s"
          entrypoint: "/usr/bin/cadvisor"
          privileged: True
          restart: "always" # no, always, on-failure[:max-retries]
          networks:
          - monitor_net:
          metric_port: 8080

queryd:
  send_port: 10410 # port for sending out UDP "specialized" packets to ONOS controller.
  onos_port: 6653 # port of ONOS controller
  query_interval: 10
  query_base_url: "/api/v1/%query_type%?query=%query_expr%%query_params%"
  cookies: 'influx_report'

prom_queries:
  default_interval: "5m" # unit: s: second, m: minute, h: hour
  category:
    utilities:
    - name: "get-all-targets"
      type: "query"
      expr: "up"
    cpu:
    - name: "host-cpu-physical-core"
      job: "nodeexporter"
      type: "query"
      expr: "machine_cpu_cores" # trick: machine_cpu_cores; origin: sum (node_hwmon_sensor_label{label=~\"core.+\"}) by (hostname,host_type,instance)
      extras:
      - "label=~\"core.+\""
      measurement: "host_cpu_core"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "core_count"
    - name: "host-cpu-logical-thread"
      job: "nodeexporter"
      type: "query"
      expr: "machine_cpu_cores"
      measurement: "host_cpu_thread"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "thread_count"
    - name: "host-avg-cpu-usage-percent"
      job: "nodeexporter"
      type: "query"
      expr: "(1 - avg (rate(node_cpu_seconds_total{%filters%}[%interval%])) by (%tags%)) * 100"
      measurement: "host_cpu"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "avg_cpu_usage"
    - name: "host-cpu-mode-idle-time"
      job: "nodeexporter"
      type: "query"
      expr: "avg (rate(node_cpu_seconds_total{}[%interval%])) by (%tags%) * 100"
      extras:
      - "mode=\"idle\""
      measurement: "host_cpu_mode_stats"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "idle_time_percent"
    - name: "host-cpu-mode-iowait-time"
      job: "nodeexporter"
      type: "query"
      expr: "avg (rate(node_cpu_seconds_total{%extras%}[%interval%])) by (%tags%) * 100"
      extras:
      - "mode=\"iowait\""
      measurement: "host_cpu_mode_stats"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "iowait_time_percent"
    - name: "host-cpu-mode-irq-time"
      job: "nodeexporter"
      type: "query"
      expr: "avg (rate(node_cpu_seconds_total{%extras%}[%interval%])) by (%tags%) * 100"
      extras:
      - "mode=\"irq\""
      measurement: "host_cpu_mode_stats"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "irq_time_percent"
    - name: "host-cpu-mode-nice-time"
      job: "nodeexporter"
      type: "query"
      expr: "avg (rate(node_cpu_seconds_total{%extras%}[%interval%])) by (%tags%) * 100"
      extras:
      - "mode=\"nice\""
      measurement: "host_cpu_mode_stats"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "nice_time_percent"
    - name: "host-cpu-mode-softirq-time"
      job: "nodeexporter"
      type: "query"
      expr: "avg (rate(node_cpu_seconds_total{%extras%}[%interval%])) by (%tags%) * 100"
      extras:
      - "mode=\"softirq\""
      measurement: "host_cpu_mode_stats"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "softirq_time_percent"
    - name: "host-cpu-mode-steal-time"
      job: "nodeexporter"
      type: "query"
      expr: "avg (rate(node_cpu_seconds_total{%extras%}[%interval%])) by (%tags%) * 100"
      extras:
      - "mode=\"steal\""
      measurement: "host_cpu_mode_stats"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "steal_time_percent"
    - name: "host-cpu-mode-system-time"
      job: "nodeexporter"
      type: "query"
      expr: "avg (rate(node_cpu_seconds_total{%extras%}[%interval%])) by (%tags%) * 100"
      extras:
      - "mode=\"system\""
      measurement: "host_cpu_mode_stats"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "system_time_percent"
    - name: "host-cpu-mode-user-time"
      job: "nodeexporter"
      type: "query"
      expr: "avg (rate(node_cpu_seconds_total{%extras%}[%interval%])) by (%tags%) * 100"
      extras:
      - "mode=\"user\""
      measurement: "host_cpu_mode_stats"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "user_time_percent"
    - name: "host-cpu-overall-average-temperature"
      job: "nodeexporter"
      type: "query"
      expr: "avg (node_hwmon_temp_celsius * ignoring(label) group_left(label) node_hwmon_sensor_label{label=~\"core.+\"}) by (%tags%)"
      measurement: "host_cpu_overall_temperature"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "avg_temperature"
    - name: "host-cpu-core-temperature"
      job: "nodeexporter"
      type: "query"
      expr: "label_replace(node_hwmon_temp_celsius * ignoring(label) group_left(label) node_hwmon_sensor_label{label=~\"core.+\"}, \"core\", \"$1\", \"label\", \"(.+)\")"
      measurement: "host_cpu_core_temperature"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      - "core"
      fields:
      - "core_temperature"
    - name: "container-avg-cpu-usage-percent"
      job: "cadvisor"
      type: "query"
      expr: "sum (rate(container_cpu_usage_seconds_total{%filters%}[%interval%])) by (%tags%) * 100"
      measurement: "container_cpu"
      tags:
      - "instance"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "avg_cpu_usage"
    - name: "container-spec-cpu-period"
      job: "cadvisor"
      type: "query"
      expr: "container_spec_cpu_period{%filters%}"
      measurement: "container_cpu_spec"
      tags:
      - "instance"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "spec_cpu_period"
    - name: "container-spec-cpu-shares"
      job: "cadvisor"
      type: "query"
      expr: "container_spec_cpu_shares{%filters%}"
      measurement: "container_cpu_spec"
      tags:
      - "instance"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "spec_cpu_shares"
    memory:
    - name: "host-memory-usage-percent"
      job: "nodeexporter"
      type: "query"
      expr: "((node_memory_MemTotal_bytes - node_memory_MemFree_bytes - node_memory_Buffers_bytes - node_memory_Cached_bytes) / node_memory_MemTotal_bytes) * 100"
      measurement: "host_memory"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "avg_memory_usage"
    - name: "host-memory-total-bytes"
      job: "nodeexporter"
      type: "query"
      expr: "node_memory_MemTotal_bytes"
      measurement: "host_memory"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "total_memory"
    - name: "host-memory-used-bytes"
      job: "nodeexporter"
      type: "query"
      expr: "node_memory_MemTotal_bytes - node_memory_MemFree_bytes - node_memory_Buffers_bytes - node_memory_Cached_bytes"
      measurement: "host_memory"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "used_memory"
    - name: "host-memory-free-bytes"
      job: "nodeexporter"
      type: "query"
      expr: "node_memory_MemFree_bytes"
      measurement: "host_memory"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "free_memory"
    - name: "host-memory-buffer-bytes"
      job: "nodeexporter"
      type: "query"
      expr: "node_memory_Buffers_bytes"
      measurement: "host_memory"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "buffers_memory"
    - name: "host-memory-cached-bytes"
      job: "nodeexporter"
      type: "query"
      expr: "node_memory_Cached_bytes"
      measurement: "host_memory"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "cached_memory"
    - name: "host-memory-swap-total-bytes"
      job: "nodeexporter"
      type: "query"
      expr: "node_memory_SwapTotal_bytes"
      measurement: "host_memory_swap"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "total_memory"
    - name: "host-memory-swap-free-bytes"
      job: "nodeexporter"
      type: "query"
      expr: "node_memory_SwapFree_bytes"
      measurement: "host_memory_swap"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "free_memory"
    - name: "host-memory-swap-used-bytes"
      job: "nodeexporter"
      type: "query"
      expr: "node_memory_SwapTotal_bytes - node_memory_SwapFree_bytes"
      measurement: "host_memory_swap"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "used_memory"
    - name: "container-memory-usage-bytes"
      job: "cadvisor"
      type: "query"
      expr: "container_memory_working_set_bytes{%filters%}"
      measurement: "container_memory"
      tags:
      - "instance"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "used_memory"
    - name: "container-memory-cache-bytes"
      job: "cadvisor"
      type: "query"
      expr: "container_memory_cache{%filters%}"
      measurement: "container_memory"
      tags:
      - "instance"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "cache_memory"
    - name: "container-memory-rss-bytes"
      job: "cadvisor"
      type: "query"
      expr: "container_memory_rss{%filters%}"
      measurement: "container_memory"
      tags:
      - "instance"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "rss_memory"
    - name: "container-memory-swap-bytes"
      job: "cadvisor"
      type: "query"
      expr: "container_memory_swap{%filters%}"
      measurement: "container_memory"
      tags:
      - "instance"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "swap_memory"
    - name: "container-memory-swap-bytes"
      job: "cadvisor"
      type: "query"
      expr: "sum(container_memory_failures_total{%filters%}) by (%tags%)"
      measurement: "container_memory"
      tags:
      - "instance"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "memory_allocation_failures"
    - name: "container-spec-memory-limit-bytes"
      job: "cadvisor"
      type: "query"
      expr: "container_spec_memory_limit_bytes{%filters%}"
      measurement: "container_memory"
      tags:
      - "instance"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "spec_memory_limit"
    - name: "container-spec-memory-reservation-limit-bytes"
      job: "cadvisor"
      type: "query"
      expr: "container_spec_memory_reservation_limit_bytes{%filters%}"
      measurement: "container_memory"
      tags:
      - "instance"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "spec_memory_reservation_limit"
    - name: "container-spec-memory-swap-limit-bytes"
      job: "cadvisor"
      type: "query"
      expr: "container_spec_memory_swap_limit_bytes{%filters%}"
      measurement: "container_memory"
      tags:
      - "instance"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "spec_memory_swap_limit"
    disk:
    - name: "host-disk-usage-percent"
      job: "nodeexporter"
      type: "query"
      expr: "((node_filesystem_size_bytes{%filters%} - node_filesystem_avail_bytes{%filters%}) / node_filesystem_size_bytes{%filters%}) * 100"
      measurement: "host_disk"
      tags:
      - "device"
      - "fstype"
      - "mountpoint"
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "avg_disk_usage"
    - name: "host-disk-total-bytes"
      job: "nodeexporter"
      type: "query"
      expr: "node_filesystem_size_bytes{%filters%}"
      measurement: "host_disk"
      tags:
      - "device"
      - "fstype"
      - "mountpoint"
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "disk_total_size"
    - name: "host-disk-available-bytes"
      job: "nodeexporter"
      type: "query"
      expr: "node_filesystem_avail_bytes{%filters%}"
      measurement: "host_disk"
      tags:
      - "device"
      - "fstype"
      - "mountpoint"
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "disk_avail_size"
    - name: "host-disk-used-bytes"
      job: "nodeexporter"
      type: "query"
      expr: "node_filesystem_size_bytes{%filters%} - node_filesystem_avail_bytes{%filters%}"
      measurement: "host_disk"
      tags:
      - "device"
      - "fstype"
      - "mountpoint"
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "disk_used_size"
    - name: "container-disk-usage-bytes"
      job: "cadvisor"
      type: "query"
      expr: "container_fs_usage_bytes{%filters%}"
      measurement: "container_disk"
      tags:
      - "device"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "disk_usage"
    disk_io:
    - name: "host-disk-io-read-bytes-per-second"
      job: "nodeexporter"
      type: "query"
      expr: "rate(node_disk_read_bytes_total{%filters%}[%interval%])"
      measurement: "host_disk_io"
      tags:
      - "device"
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "read_bytes_per_second"
    - name: "host-disk-io-written-bytes-per-second"
      job: "nodeexporter"
      type: "query"
      expr: "rate(node_disk_written_bytes_total{%filters%}[%interval%])"
      measurement: "host_disk_io"
      tags:
      - "device"
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "written_bytes_per_second"
    - name: "host-disk-io-read-count-per-second"
      job: "nodeexporter"
      type: "query"
      expr: "rate(node_disk_reads_completed_total{%filters%}[%interval%])"
      measurement: "host_disk_io"
      tags:
      - "device"
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "read_per_second"
    - name: "host-disk-io-write-count-per-second"
      job: "nodeexporter"
      type: "query"
      expr: "rate(node_disk_writes_completed_total{%filters%}[%interval%])"
      measurement: "host_disk_io"
      tags:
      - "device"
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "write_per_second"
    - name: "container-disk-io-read-bytes-per-second"
      job: "cadvisor"
      type: "query"
      expr: "rate(container_fs_reads_bytes_total{%filters%}[%interval%])"
      measurement: "container_disk_io"
      tags:
      - "device"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "read_bytes_per_second"
    - name: "container-disk-io-written-bytes-per-second"
      job: "cadvisor"
      type: "query"
      expr: "rate(container_fs_writes_bytes_total{%filters%}[%interval%])"
      measurement: "container_disk_io"
      tags:
      - "device"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "written_bytes_per_second"
    network:
    - name: "host-tcp-in-segments"
      job: "nodeexporter"
      type: "query"
      expr: "node_netstat_Tcp_InSegs"
      measurement: "host_tcp_stats"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "tcp_in_segments"
    - name: "host-tcp-out-segments"
      job: "nodeexporter"
      type: "query"
      expr: "node_netstat_Tcp_OutSegs"
      measurement: "host_tcp_stats"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "tcp_out_segments"
    - name: "host-tcp-in-error-segments"
      job: "nodeexporter"
      type: "query"
      expr: "node_netstat_Tcp_InErrs"
      measurement: "host_tcp_stats"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "tcp_in_error_segments"
    - name: "host-tcp-connection-current"
      job: "nodeexporter"
      type: "query"
      expr: "node_netstat_Tcp_CurrEstab"
      measurement: "host_tcp_stats"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "tcp_connection_current"
    - name: "host-udp-in-datagrams"
      job: "nodeexporter"
      type: "query"
      expr: "node_netstat_Udp_InDatagrams"
      measurement: "host_udp_stats"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "udp_in_datagrams"
    - name: "host-udp-out-datagrams"
      job: "nodeexporter"
      type: "query"
      expr: "node_netstat_Udp_OutDatagrams"
      measurement: "host_udp_stats"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "udp_out_datagrams"
    - name: "host-udp-in-error-datagrams"
      job: "nodeexporter"
      type: "query"
      expr: "node_netstat_Udp_InErrors"
      measurement: "host_udp_stats"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "udp_in_error_datagrams"
    network_io:
    - name: "host-network-io-recv-bytes"
      job: "nodeexporter"
      type: "query"
      expr: "rate(node_network_receive_bytes_total{%filters%}[%interval%])"
      measurement: "host_network_io"
      tags:
      - "device"
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "recv_bytes_per_second"
    - name: "host-network-io-trans-bytes"
      job: "nodeexporter"
      type: "query"
      expr: "rate(node_network_transmit_bytes_total{%filters%}[%interval%])"
      measurement: "host_network_io"
      tags:
      - "device"
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "trans_bytes_per_second"
    - name: "host-network-io-recv-packets"
      job: "nodeexporter"
      type: "query"
      expr: "rate(node_network_receive_packets_total{%filters%}[%interval%])"
      measurement: "host_network_io"
      tags:
      - "device"
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "recv_packets_per_second"
    - name: "host-network-io-trans-packets"
      job: "nodeexporter"
      type: "query"
      expr: "rate(node_network_transmit_packets_total{%filters%}[%interval%])"
      measurement: "host_network_io"
      tags:
      - "device"
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "trans_packets_per_second"
    - name: "container-network-io-recv-bytes"
      job: "cadvisor"
      type: "query"
      expr: "rate(container_network_receive_bytes_total{%filters%}[%interval%])"
      measurement: "container_network_io"
      tags:
      - "interface"
      - "instance"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "recv_bytes_per_second"
    - name: "container-network-io-trans-bytes"
      job: "cadvisor"
      type: "query"
      expr: "rate(container_network_transmit_bytes_total{%filters%}[%interval%])"
      measurement: "container_network_io"
      tags:
      - "interface"
      - "instance"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "trans_bytes_per_second"
    - name: "container-network-io-recv-packets"
      job: "cadvisor"
      type: "query"
      expr: "rate(container_network_receive_packets_total{%filters%}[%interval%])"
      measurement: "container_network_io"
      tags:
      - "interface"
      - "instance"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "recv_packets_per_second"
    - name: "container-network-io-recv-packets"
      job: "cadvisor"
      type: "query"
      expr: "rate(container_network_transmit_packets_total{%filters%}[%interval%])"
      measurement: "container_network_io"
      tags:
      - "interface"
      - "instance"
      - "hostname"
      - "host_type"
      - "image"
      - "name"
      fields:
      - "trans_packets_per_second"
    misc:
    - name: "host-uptime"
      job: "nodeexporter"
      type: "query"
      expr: "time() - node_boot_time_seconds"
      measurement: "host_uptime"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "uptime_second"
    - name: "host-running-containers"
      job: "cadvisor"
      type: "query"
      expr: "count (rate(container_last_seen{%extras%}[%interval%])) by (%tags%)"
      extras:
      - "id=~\"/docker/.+\""
      interval: "30s"
      measurement: "host_running_containers"
      tags:
      - "hostname"
      - "host_type"
      - "instance"
      fields:
      - "running_containers"
    - name: "host-type-total-per-types"
      job: "cadvisor"
      type: "query"
      expr: "count(machine_cpu_cores) by (%tags%)"
      measurement: "aggregated_information"
      tags:
      - "host_type"
      fields:
      - "total_machines"
    - name: "host-type-total-cpu-cores"
      job: "cadvisor"
      type: "query"
      expr: "sum(machine_cpu_cores) by (%tags%)" # trick: sum(machine_cpu_cores) by (host_type); origin: sum (node_hwmon_sensor_label{label=~\"core.+\"}) by (host_type)
      extras:
      - "label=~\"core.+\""
      measurement: "aggregated_information"
      tags:
      - "host_type"
      fields:
      - "total_cores"
    - name: "host-type-total-cpu-threads"
      job: "cadvisor"
      type: "query"
      expr: "sum(machine_cpu_cores) by (%tags%)"
      measurement: "aggregated_information"
      tags:
      - "host_type"
      fields:
      - "total_threads"
    - name: "host-type-total-memory-size"
      job: "nodeexporter"
      type: "query"
      expr: "sum(node_memory_MemTotal_bytes) by (%tags%)"
      measurement: "aggregated_information"
      tags:
      - "host_type"
      fields:
      - "total_memory"
    - name: "host-type-total-memory-swap-size"
      job: "nodeexporter"
      type: "query"
      expr: "sum(node_memory_SwapTotal_bytes) by (%tags%)"
      measurement: "aggregated_information"
      tags:
      - "host_type"
      fields:
      - "total_memory_swap"
    - name: "host-type-total-disk-size"
      job: "nodeexporter"
      type: "query"
      expr: "sum(node_filesystem_size_bytes{%extras%}) by (%tags%)" # trick: either / or /var-lib-docker; good: add entry in criteria_db.json
      extras:
      - "mountpoint=~\"^(/|/var-lib-docker)$\""
      measurement: "aggregated_information"
      tags:
      - "host_type"
      fields:
      - "total_disk_size"
